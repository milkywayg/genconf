" Wes Doyle vimrc
" Last Update March 20 2018

set nocompatible

syntax on

" Vundle begins here; turn off filetype temporarily
" set the runtime path to include Vundle and initialize
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" plugins
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-surround'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-markdown'
Plugin 'flazz/vim-colorschemes'
Plugin 'nvie/vim-flake8'
Plugin 'bronson/vim-trailing-whitespace'
Plugin 'leafgarland/typescript-vim'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'bling/vim-bufferline'
Plugin 'jlanzarotta/bufexplorer'

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

call vundle#end()
filetype plugin indent on

set term=screen-256color
" colorscheme PaperColor

"=========== General config ========"
let python_highlight_all=1

set autoindent
set bg=dark
set backspace=indent,eol,start
set expandtab
set ignorecase
set incsearch
set laststatus=2
set linebreak
set nobackup
set noerrorbells
set nolist
set noswapfile
set novb
set nowrap
set number
set relativenumber
set ruler
set scrolloff=5
set showmatch
set shiftwidth=4
set shortmess=I
set showcmd
set showmode
set sidescroll=1
set sidescrolloff=7
set smartcase
set softtabstop=4
set undolevels=1000
set nrformats-=octal
set title
" set background=dark
set ttyfast
" set lazyredraw


highlight ColorColumn ctermbg=black
set colorcolumn=80

"CtrlP
let g:ctrlp_map = '<c-p>'

"Airline
"let g:airline_theme='tomorrow'
let g:airline_theme='luna'
let g:airline_powerline_fonts = 1

"NERDTree
map <C-n> :NERDTreeToggle<CR>

"Gvim mods
set encoding=utf-8
set hidden
set history=100
set mouse=a

set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=Lo

"nerd-commenter settings
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1

" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1

" Align line-wise comment delimiters flush left instead of following code
" indentation
let g:NERDDefaultAlign = 'left'

" Allow commenting and inverting empty lines (useful when commenting a
" region)
let g:NERDCommentEmptyLines = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

"see hidden files in nerdtree
let NERDTreeShowHidden=1

nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Remove all trailing whitespace by pressing F4
noremap <F4> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

if has("gui_running")
    if has("gui_gtk2")
        set guifont=Inconsolata\ for\ Powerline\ Medium\ 16
        colorscheme iceberg
    endif
endif

" Set ctrl+S as save
inoremap <c-s> <c-o>:update<CR>

" my addings
" Highlight search results
set hlsearch

" Mappings
let mapleader=","
" nnoremap <Leader>b :bp<CR>
" nnoremap <Leader>f :bn<CR>
" nnoremap     <M-l> : so %<CR>
nnoremap     <Leader>R : %s/
nnoremap     <Leader>r : .,$s/
"nnoremap     <M-b> : b
"nnoremap     <M-p> :b#<CR>
"nnoremap     <Leader>c :bd<CR>
nnoremap <silent> <leader>c :lclose<bar>b#<bar>bd #<CR>
nnoremap     <F5> :ls<CR>:b
nnoremap     <Leader>u :noh<CR>
nnoremap <silent> <Leader>h ml:execute 'match Search /\%'.line('.').'l/'<CR>
nnoremap <silent> <Leader>g :call clearmatches()<CR>
nnoremap     <F8> :diffupdate<CR>
nnoremap     <F6> :diffthis<CR>
nnoremap     <F7> :diffoff<CR>

nnoremap     <M-g> :%!grep 
"comment-uncomment
vnoremap <Leader>9 :norm i#<CR>
vnoremap <Leader>8 :norm ^x<CR>

" toggle easily paste mode
nnoremap <silent><Leader>0:set invpaste paste?<CR>
set pastetoggle=<Leader>0
set showmode

" Buffers - explore/next/previous: Alt-F12, F12, Shift-F12.
nnoremap <silent> <F12> :BufExplorer<CR>
nnoremap <silent> ! :bp<CR>
nnoremap <silent> @ :bn<CR>
nnoremap <silent> <Leader>1 :bp<CR>
nnoremap <silent> <Leader>2 :bn<CR>

" quick select in normla mode with 8
noremap 8 *<S-n> 

nnoremap     <F2> : /\<<C-r><C-w>\><CR>N
" noremap <silent> <C-S>          :update<CR>
" vnoremap <silent><C-S>         <C-C>:update<CR>
" inoremap <silent><C-S>         <C-O>:update<CR>


" Command completion
 " Wildmenu
set wildmenu
set wildmode=longest,list
if has("wildmenu")
   set wildignore+=*.a,*.o
   set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png
   set wildignore+=.DS_Store,.git,.hg,.svn
   set wildignore+=*~,*.swp,*.tmp
   " set wildmode=list:longest
   set wildignore+=.hg,.git,.svn " Version Controls"
   set wildignore+=*.aux,*.out,*.toc "Latex Indermediate files"
   set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg "Binary Imgs"
   set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest "Compiled Object files"
   set wildignore+=*.spl "Compiled speolling world list"
   set wildignore+=*.sw? "Vim swap files"
   set wildignore+=*.DS_Store "OSX SHIT"
   set wildignore+=*.luac "Lua byte code"
   set wildignore+=migrations "Django migrations"
   set wildignore+=*.pyc "Python Object codes"
   set wildignore+=*.orig,*.rej "Merge resolution files"
endif

" Add possibility to resize the panes with mouse
set mouse+=a
if &term =~ '^screen'
    " tmux knows the extended mouse mode
    set ttymouse=xterm2
endif

"go to new pane after aplitting
set splitbelow
set splitright

" hyphen part of a word
set iskeyword+=-

" Yank in the system clipboard -- dont know if this does something
set clipboard=unnamedplus

" in xterm to change the cursor in insert mode
"
"
"let &t_SI = "\<Esc>[6 q"
"let &t_SR = "\<Esc>[4 q"
"let &t_EI = "\<Esc>[2 q"

"if &term =~ "xterm\\|rxvt"
"  " use an orange cursor in insert mode
"  let &t_SI = "\<Esc>]12;orange\x7"
"  " use a red cursor otherwise
"  let &t_EI = "\<Esc>]12;red\x7"
"  silent !echo -ne "\033]12;red\007"
"  " reset cursor when vim exits
"  autocmd VimLeave * silent !echo -ne "\033]112\007"
"  " use \003]12;gray\007 for gnome-terminal and rxvt up to version 9.21
"endif





" =========== Gvim Settings =============

" Removing scrollbars
if has("gui_running")
    set guitablabel=%-0.12t%M
    set guioptions-=T
    set guioptions-=r
    set guioptions-=L
    set guioptions+=a
    set guioptions-=m
    colo badwolf
    set listchars=tab:▸\ ,eol:¬         " Invisibles using the Textmate style
else
    set t_Co=256
    colorschem badwolf
endif

" ========== END Gvim Settings ==========

"==========================================================================="
" Set vim to save the file on focus out.
au FocusLost * :wa
"==========================================================================="
" Redraw screen every time when focus gained
" au FocusGained * :redraw!
"==========================================================================="




"==========================================================================="
" Working with split screen nicely
" Resize Split When the window is resized"
au VimResized * :wincmd =

"==========================================================================="








